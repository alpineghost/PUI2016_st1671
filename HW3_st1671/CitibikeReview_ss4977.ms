{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Formulation of the Null/Alternative hypothesis:\n",
    "The statement of the null hypothesis is the opposite of what is on the line $H_0$. To bring the two into agreement, one of the two should be done:\n",
    "\n",
    "### The mean age of male riders is the same or larger than for female riders\n",
    "\n",
    "or\n",
    "\n",
    "$H_0: M_{\\rm birthyear} \\ge W_{\\rm birthyear}$\n",
    "\n",
    "$H_1: M_{\\rm birthyear} < W_{\\rm birthyear}$\n",
    "\n",
    "The form of the null hypothesis is succinct and, with the description of the hypothesis, the variables are clear."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data relevance to the project\n",
    "\n",
    "The data support the project. Two data fields are required in order to perform the test: the gender of each rider and their birth years, both are present in the data file."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Pre-processing of the data\n",
    "\n",
    "The preprocessing in cells [31], [39], [40], [42], [94], [88], and [96] are the proper procedure to test the null hypothesis. The first stage is to import the data file ([31]). Then remove the extraneous information ([39], [40], [94]). After that, summarize by gender ([88]). Along the way, [42], [94], and [96] allowed visualization of progress. Subsequent to that, [80] provided visualization of the data. The visualization allows an assessment of the distribution of the data.\n",
    "\n",
    "However, subsequent steps do not contribute towards testing the null hypothesis. What is needed is a statistical summary of each group. More in the description of testing the null hypothesis."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Testing the null hypothesis\n",
    "\n",
    "\n",
    "There are two categories for the independent variable and on dependent variable. Therefore, the proper test of the null hypothesis is the $t$-test. However, there are over 1,000 degrees of freedom, so the $t$-test is essentially the $Z$-test.\n",
    "\n",
    "The $Z$-test requires two things. First is obtaining the mean birth year for each gender. Second is the standard error for each mean. The first figure would indicate which gender has the higher birth year and the second would be used to measure the statistical significance of that finding.  The means could be calculated by:\n",
    "\n",
    "mu_m = df_m[\"birth year\"].mean()\n",
    "mu_w = df_w[\"birth year\"].mean()\n",
    "\n",
    "Since the data are a numerical value for each observation, and they are distributed with a peak central value and diminishing tails albeit more skewed than normal, the standard deviation is the standard deviation of the sample. This would be determined by:\n",
    "\n",
    "s_m = df_m[\"birth year\"].std()\n",
    "s_w = df_w[\"birth year\"].std()\n",
    "\n",
    "These are the sample standard deviations for individual observations. For the sample size, the adjustment of $n / (n-1)$ would be insignificant. The standard error of the mean is the standard deviation divided by the square root of the sample size.\n",
    "\n",
    "serr_m = s_m / df_m[\"birth year\"].count()\n",
    "serr_w = s_w / df_w[\"birth year\"].count()\n",
    "\n",
    "Calculate the Z-score as\n",
    "\n",
    "$Z = ({\\rm mu}_m - {\\rm mu}_w) / {\\rm max}({\\rm serr}_m, {\\rm serr}_w)$.\n",
    "\n",
    "Which sign would be correct will depend on whether the null hypothesis is formulated as men's age is larger and men's birth year is larger. If the sign is inconsistent with the null hypothesis, look the $p$-value associated with that $Z$-score or calculate it as\n",
    "\n",
    "pvalue = 1 - scipy.stats.norm.cdf(Z)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "PUI2016_Python2",
   "language": "python",
   "name": "pui2016_python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
